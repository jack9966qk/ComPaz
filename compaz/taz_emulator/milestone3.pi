    # program
    # variable declaration part
    # variable declaration
    call main
    halt
main:
    push_stack_frame 1
    # compound statement
    call_builtin read_int
    store 0, r0
    # while statement
label0:
    # SimpleExpression
    # term
    # SimpleExpression
    # term
    load r2, 0
    # SimpleExpression
    # term
    int_const r3, 10
    cmp_gt_int r1, r2, r3
    # SimpleExpression
    # term
    load r5, 0
    # SimpleExpression
    # term
    int_const r6, 100
    cmp_lt_int r4, r5, r6
    and r1, r1, r4
    branch_on_false r1, label1
    # compound statement
    # if statement
    # SimpleExpression
    # term
    load r8, 0
    # SimpleExpression
    # term
    int_const r9, 50
    cmp_lt_int r7, r8, r9
    branch_on_false r7, label2
    # SimpleExpression
    # term
    load r10, 0
    # term
    int_const r11, 1
    sub_int r10, r10, r11
    store 0, r10
    branch_uncond label3
label2:
    # SimpleExpression
    # term
    load r12, 0
    # term
    int_const r13, 1
    add_int r12, r12, r13
    store 0, r12
label3:
    branch_uncond label0
label1:
    # if statement
    # SimpleExpression
    # term
    load r15, 0
    # SimpleExpression
    # term
    int_const r16, 50
    cmp_lt_int r14, r15, r16
    branch_on_false r14, label4
    string_const r0, 'Went down'
    call_builtin print_string
    branch_uncond label5
label4:
    string_const r0, 'Went up'
    call_builtin print_string
label5:
    call_builtin print_newline
    pop_stack_frame 1
    return