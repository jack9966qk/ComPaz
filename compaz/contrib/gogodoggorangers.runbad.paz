program gogodoggo;

var
    n: integer;
    res: real;

procedure boooo;
var
  a: array [1..32] of integer;
  i: integer;
begin
  i := 0;
  while i < 20 do
    write(a[i]);
end;

procedure fact(n: real; var result: real);
var
  asdf: boolean;
begin
    if (n = 0) then
        result := 1;

    begin
        n := (n / 2) * 2;
        n := -(5 - 2 - 1);
        n := -5 - (2 - 1);

        asdf := ((true and false)) and ((true or false or true));
        asdf := true and false and true or (false or true);
        asdf := not false and true;
        asdf := (((not false))) and true;
        asdf := not (false and true);
        asdf := not (false or true);
        asdf := not (false);
        asdf := not (((false and true)));
        asdf := not (((2 > 1)));
        asdf := (2 < 1) and (3 > 2);
        asdf := (false and true) or (true and false);
        asdf := (false or true) and (true or false);

        n := 4 - (4 + 1);
        n := 4 - (4 - 1);
        n := 4 - 4 - 1;
        n := (4 - 4) - 1;

        n := -((5 + 2));
        n := -((((5))));
        n := -(5);
        n := -(5) + (2);
        n := (((-5 + 2)));
        n := (((-5))) + (2);
        n := (((-5))) + (-2);
        n := (5 + 2);
        n := 5 * 2;

        n := ((3 + 2)) * 5;
        n := 5 * (3 + 2);
        n := (3 - 2) * 5;
        n := 5 * (3 - 2);
        n := (3 + 2) / 5;
        n := 5 / (3 + 2);
        n := (3 - 2) / 5;
        n := 5 / (3 - 2);

        n := 5 + (3 + 2);
        n := (3 * 2) * 5;
        n := (5 * 3) + 2;
        n := (3 * 2) + 5;
        n := 5 * (3 * 2);
        n := 5 + (3 * 2);
        n := 5 * (-3);

        n := 4 + 5 - 9 * (-1 + 3);

        n := 5 + (2 + 1);
        n := 5 + (2) + 1;
        n := (5) + (-2) + 1;
        fact(n - 1, result);
        result := n * result
    end
end;

begin
    for n := 0 to 16 do
    begin
        fact(n, res);
        write(res);
    end
end.
